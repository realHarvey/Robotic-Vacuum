<launch>
  <param name="/use_sim_time" value="true" />

<!-- Roomba 的 URDF -->
  <param name="robot_description" textfile="$(find webots_ros)/protos/Create.urdf" />
  <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher" />
  <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher" />
  
<!-- 参数集 -->
  <arg name="map" default="map.yaml" />
  <arg name="coverage_area_offset" default="-9 -8  0  0  0  0"/>
  <arg name="coverage_area_size_x" default="20"/>
  <arg name="coverage_area_size_y" default="12"/>
  <arg name="target_x_vel"   default="0.2"/>
  <arg name="target_x_acc"   default="0.2"/>
  <arg name="target_yaw_vel" default="0.5"/>
  <arg name="target_yaw_acc" default="0.5"/>
  <arg name="robot_radius"   default="0.2"/>
  <arg name="tool_radius"    default="0.1"/>

<!-- 导入map -->
  <node name="map_server"  pkg="map_server" type="map_server" args="$(find webots_ros)/map/$(arg map)" />
  <node name="grid_server" pkg="map_server" type="map_server" args="$(find webots_ros)/map/$(arg map)">
      <param name="frame_id" value="map"/>
  </node>

<!--控制器: 覆盖清扫控制器 publish "/move_base/cmd_vel" -> 建图导航控制器 -->
  <node name="controller" pkg="tracking_pid" type="controller" output="screen">
      <remap from="move_base/cmd_vel" to="/cmd_vel"/>
      <remap from="local_trajectory" to="trajectory"/>
      <param name="controller_debug_enabled" value="true"/>
      <param name="track_base_link" value="true"/>
      <param name="l" value="0.001"/>
      <param name="Ki_long" value="0.0"/>
      <param name="Kp_long" value="2.0"/>
      <param name="Kd_long" value="0.5"/>
      <param name="Ki_lat" value="0.0"/>
      <param name="Kp_lat" value="4.0"/>
      <param name="Kd_lat" value="0.3"/>
  </node>
  <node name="ccontroller" pkg="webots_ros" type="ccontroller" output="screen"/>

<!--定位 AMCL -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <param name="gui_publish_rate" value="10.0"/>
    <param name="global_frame_id"  value="map"/>
    <param name="base_frame_id"    value="base_link"/>
    <param name="odom_frame_id"    value="odom"/>
    <remap from="scan"             to="/Roomba/laser/laser_scan"/>
    <param name="transform_tolerance" value="0.1"/>
    <param name="min_particles"    value="150"/>
    <param name="max_particles"    value="500"/>
    <param name="updata_min_a"     value="0.5"/>
    <param name="update_min_d"     value="0.2"/>
    <param name="laser_min_range"  value="0.2"/>
    <param name="laser_max_range"  value="12"/>
    <param name="laser_max_beams"  value="30"/>
    <param name="odom_model_type"  value="diff"/>
  </node>

<!--导航  Global: Informed-RRT* | Local: Teb | FCPP: SpiralSTC & PID -->
  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find webots_ros)/nav_cfg/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find webots_ros)/nav_cfg/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find webots_ros)/nav_cfg/local_costmap_params.yaml"  command="load" />
    <rosparam file="$(find webots_ros)/nav_cfg/global_costmap_params.yaml" command="load" />
    <remap from="scan" to="/Roomba/laser/laser_scan"/>
    <param name="controller_frequency" value="10.0"/>
    <param name="planner_frequency" value="0.0"/>
    <param name="base_global_planner" value="sample_planner/SamplePlanner"/>
    <param name="SamplePlanner/planner_name" value="informed_rrt" />
    <rosparam file="$(find webots_ros)/nav_cfg/sample_planner_params.yaml" command="load" />
    <param name="base_local_planner"   value="teb_local_planner/TebLocalPlannerROS"/>
    <rosparam file="$(find webots_ros)/nav_cfg/teb_local_planner_params.yaml" command="load" />
  </node> -->
  <node pkg="mbf_costmap_nav" type="mbf_costmap_nav" respawn="false" name="move_base_flex" output="screen" required="true">
    <param name="tf_timeout" value="1.5"/>
    <rosparam file="$(find webots_ros)/nav_cfg/fcpp_planners.yaml" command="load" />
    <rosparam file="$(find webots_ros)/nav_cfg/local_costmap_params.yaml" command="load" />
    <param name="global_costmap/robot_radius" value="$(arg robot_radius)"/>
    <param name="SpiralSTC/robot_radius"      value="$(arg robot_radius)"/>
    <param name="SpiralSTC/tool_radius"       value="$(arg tool_radius)"/>
    <remap from="odom" to="/odom"/>
    <remap from="scan" to="/Roomba/laser/laser_scan"/>
    <remap from="/move_base_flex/SpiralSTC/plan" to="/move_base/SpiralSTC/plan"/>
    <remap from="/move_base_flex/tracking_pid/interpolator" to="/move_base/TrackingPidLocalPlanner/interpolator"/>
  </node>
  <node pkg="mbf_costmap_nav" type="move_base_legacy_relay.py" name="move_base" >
      <param name="base_global_planner" value="SpiralSTC" />
  </node>

<!--FCPP: 借用mobile_robot_simulator将 /cmd_vel 输出集成到 tf 和 odom 中 -->
  <node pkg="mobile_robot_simulator" type="mobile_robot_simulator_node" name="mobile_robot_simulator" output="screen">
    <param name="publish_map_transform" value="true"/>
    <param name="publish_rate" value="10.0"/>
    <param name="velocity_topic" value="/move_base/cmd_vel"/>
    <param name="odometry_topic" value="/odom"/>
  </node>

<!--FCPP: Tracking_pid cannot just accept a nav_msgs/Path, it can only go to a PoseStamped, so the path_interpolator drags a PoseStamped over a Path at a given speed-->
  <node name="interpolator" pkg="tracking_pid" type="path_interpolator">
    <param name="target_x_vel" value="$(arg target_x_vel)"/>
    <param name="target_x_acc" value="$(arg target_x_acc)"/>
    <param name="target_yaw_vel" value="$(arg target_yaw_vel)"/>
    <param name="target_yaw_acc" value="$(arg target_yaw_acc)"/>
    <remap from="path" to="/move_base/SpiralSTC/plan"/>
  </node>

<!--FCPP: 通过发布 goal 来触发 planner-->
  <node name="publish_simple_goal" pkg="rostopic" type="rostopic"  launch-prefix="bash -c 'sleep 1.0; $0 $@' "
        args="pub --latch /move_base/goal move_base_msgs/MoveBaseActionGoal --file=$(find webots_ros)/nav_cfg/goal.yaml"/>

<!--FCPP: 跟踪覆盖进度 -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_coveragemap" args="$(arg coverage_area_offset) map coverage_map 100" />
  <node pkg="full_coverage_path_planner" type="coverage_progress" name="coverage_progress">
    <param name="~target_area/x" value="$(arg coverage_area_size_x)" />
    <param name="~target_area/y" value="$(arg coverage_area_size_y)" />
    <param name="~coverage_radius" value="$(arg tool_radius)" />
    <remap from="reset" to="coverage_progress/reset" />
    <param name="~map_frame" value="coverage_map"/>
  </node>

<!--工具集: rviz | 调参器 | tf tree -->
  <node name="rviz" pkg="rviz" type="rviz" required="true" args="-d $(find webots_ros)/rviz_cfg/clean.rviz" />
  <!-- <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" /> -->
  <!-- <node name="rqt_tf_tree" pkg="rqt_tf_tree" type="rqt_tf_tree" /> -->
</launch>

TebLocalPlannerROS:
 odom_topic: /odom

 # 策略相关
 teb_autosize: True  # 是否允许改变轨迹的时域长度，也就是改变 dt_ref
 dt_ref: 0.3         # 路径上的两个相邻姿态的默认距离
 dt_hysteresis: 0.1  # 允许改变的时域解析度的浮动范围
 global_plan_viapoint_sep: -1 # min(0.1): 最优轨迹很紧密地跟随全局路径    max(5.0): 更为顺滑地完成转向
 global_plan_overwrite_orientation: True # 是否修正全局路径中的临时局部路径点的朝向
 max_global_plan_lookahead_dist: 1.0     # 最大向前看距离
 feasibility_check_no_poses: 3           # 判断生成的轨迹是否冲突：若设置为2，即从轨迹起点开始逐个检查轨迹上的2个点，若2个点均不发生碰撞，则认为本次轨迹有效

 # 运动相关
 max_vel_x: 0.5           # 最大速度(v1m = v2m = 16.129rad/s ---经过计算---> Vm = 0.5m/s  Wm = 1.49rad/s)
 max_vel_x_backwards: 0.5 # 最大倒车速度，设置为0或者负数将导致错误减少倒车应该修改倒车权重，不改这里
 max_vel_theta: 1.0       # 最大转向角速度，跟 min_turning_radius 相关 (r = v / omega)
 acc_lim_x: 0.5           # 最大线加速度
 acc_lim_theta: 0.5       # 最大角加速度

 #  转弯半径相关
 min_turning_radius: 0           # 小转弯半径如果设为 0，表示可以原地转弯
 cmd_angle_instead_rotvel: False # 是否将角速度消息转换为操作上的角度变化。True: 话题内的数据是电机转角
 wheelbase: 0.31                 # 只有在 cmd_angle_instead_rotvel 为 true 时才有效

 # 车体轮廓
 footprint_model: # types可选项: "point", "circular", "two_circles", "line", "polygon"
   type: "circular"
   radius: 0.1675

 # 到达目标点的判断容差   
 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.1
 complete_global_plan: True
    
 # 障碍物相关
 min_obstacle_dist: 0.05    # 与障碍物的最小间距
 inflation_dist: 0.335      # 障碍物周围的缓冲区，进缓冲区会导致规划器减速
 include_costmap_obstacles: True          # 是否检测动态障碍物
 costmap_obstacles_behind_robot_dist: 1.0 # 身后多远距离内障碍物加入检测范围
 obstacle_poses_affected: 25              # 障碍物对附近多少个关键点产生影响
 costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
 costmap_converter_spin_thread: True      # 将在不同的线程中调用其回调队列
 costmap_converter_rate: 3
 # CostmapTo:  LinesDBSRANSAC | LinesDBSMCCH | PolygonsDBSMCCH
 costmap_converter/CostmapToLinesDBSRANSAC:
    cluster_max_distance: 0.4             # 小于这个值 -> 被认为属于同一簇
    cluster_min_pts: 2                    # 构成一个有效聚类所需的最小点数
    cluster_max_pts: 180                  # 增大 -> Line更长更连续，但是容易偏出障碍
    ransac_inlier_distance: 0.50
    ransac_min_inliers: 10
    ransac_no_iterations: 1500
    ransac_remainig_outliers: 3           # 精度相关：允许最多有3个离群点
    ransac_convert_outlier_pts: True      # convert remaining outliers to single points
    ransac_filter_remaining_outlier_pts: False   # 过滤剩余异常值的内部并仅保留其凸包的关键点
    convex_hull_min_pt_separation: 0.1    # 计算凸包时两个点之间的最小分离距离 -> 避免生成凸包时过于密集的点

 # 路径优化相关
 no_inner_iterations: 3     # 每次外部迭代中求解器的调用次数
 no_outer_iterations: 3     # 每次采样间隔的迭代次数
 penalty_epsilon: 0.1       # 为所有的惩罚项增加一个小的安全余量
 weight_max_vel_x: 5        # 平移速度的优化权重
 weight_max_vel_theta: 1    # 角速度的优化权重
 weight_acc_lim_x: 1        # 平移加速度的优化权重
 weight_acc_lim_theta: 1    # 角加速度的优化权重
 weight_kinematics_nh: 1000 # 非完整运动学的优化权重
 weight_kinematics_forward_drive: 1  # 往前移动的权重(倒车惩罚)
 weight_kinematics_turning_radius: 1 # 最小转向半径的权重
 weight_optimaltime: 1      # 耗时权重
 weight_obstacle: 50        # 与障碍物保持距离的权重

 # 多线规划
 enable_homotopy_class_planning: True # 激活多线规划
 enable_multithreading: True          # 多线程计算
 max_number_classes: 2                # 规划的路径线数上限
 selection_cost_hysteresis: 1.0       # 路径轨迹入选的评价上限
 selection_obst_cost_scale: 1.0       # 障碍物评价在入选标准中的缩放倍率
 selection_alternative_time_cost: False # 时间成本是否要进行平方计算
 roadmap_graph_no_samples: 15         # 为创建 roadmap graph 而生成的样本数
 roadmap_graph_area_width: 5          # 关键点采样的宽度（米）